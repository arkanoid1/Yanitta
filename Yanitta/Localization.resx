<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbilityList" xml:space="preserve">
    <value>Ability list</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="AddAbility" xml:space="preserve">
    <value>Append new ability</value>
  </data>
  <data name="AddProfile" xml:space="preserve">
    <value>Append new profile</value>
  </data>
  <data name="AddRotation" xml:space="preserve">
    <value>append new rotation</value>
  </data>
  <data name="AlavilableAbilitys" xml:space="preserve">
    <value>Alavilable abilities</value>
  </data>
  <data name="CancelChanel" xml:space="preserve">
    <value>Drop chanel</value>
  </data>
  <data name="Cencel" xml:space="preserve">
    <value>Cencel</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Constructor" xml:space="preserve">
    <value>Constructor</value>
  </data>
  <data name="CopyAbility" xml:space="preserve">
    <value>Copy current ability</value>
  </data>
  <data name="CopyRotation" xml:space="preserve">
    <value>Copy current rotation</value>
  </data>
  <data name="CurrentRotation" xml:space="preserve">
    <value>Current rotation</value>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="DeleteAbility" xml:space="preserve">
    <value>Drop current ability</value>
  </data>
  <data name="DeleteRotation" xml:space="preserve">
    <value>Drop current rotation</value>
  </data>
  <data name="EditorTitle" xml:space="preserve">
    <value>Profile editor</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="IsAttacedTarget" xml:space="preserve">
    <value>Is attacked unit</value>
  </data>
  <data name="IsUseIncombat" xml:space="preserve">
    <value>Use in combat</value>
  </data>
  <data name="Minimise" xml:space="preserve">
    <value>Minimise</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProfileFileMask" xml:space="preserve">
    <value>"XML files (*.xml)|*.xml|All files (*.*)|*.*"</value>
  </data>
  <data name="RotationList" xml:space="preserve">
    <value>Rotation list</value>
  </data>
  <data name="SaveToolTip" xml:space="preserve">
    <value>Сохранить текущий профиль</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="Spell" xml:space="preserve">
    <value>Spell</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Yanitta</value>
  </data>
  <data name="CodeConsole" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="Rotation" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="BeforeRotationCode" xml:space="preserve">
    <value>Before rotation code</value>
  </data>
  <data name="BeforeRotationCodeToolTip" xml:space="preserve">
    <value>This code exequted before rotation started</value>
  </data>
  <data name="CancelChanelToolTip" xml:space="preserve">
    <value>Drop channel spell</value>
  </data>
  <data name="CancelCastingToolTip" xml:space="preserve">
    <value>Drop casting spell</value>
  </data>
  <data name="TargetToolTip" xml:space="preserve">
    <value>Target type</value>
  </data>
  <data name="IsInCombatToolTip" xml:space="preserve">
    <value>Check in combat</value>
  </data>
  <data name="IsAttacedTargetToolTip" xml:space="preserve">
    <value>Is attaced unit</value>
  </data>
  <data name="CancelCasting" xml:space="preserve">
    <value>Drop casting</value>
  </data>
  <data name="SetRecastDelay" xml:space="preserve">
    <value>Delay on next spell</value>
  </data>
  <data name="SetRecastDelayToolTip" xml:space="preserve">
    <value>The delay in the next utterance of this spell</value>
  </data>
  <data name="IsNotGCDToolTip" xml:space="preserve">
    <value>Indicates that the ability has no global cooldown</value>
  </data>
  <data name="IsNotGCD" xml:space="preserve">
    <value>Without GCD</value>
  </data>
  <data name="CoreHeader" xml:space="preserve">
    <value>Core</value>
  </data>
  <data name="CoreHeaderToolTip" xml:space="preserve">
    <value>Contains handler code abilities</value>
  </data>
  <data name="GlobalFunk" xml:space="preserve">
    <value>Common functions</value>
  </data>
  <data name="GlobalFunkToolTip" xml:space="preserve">
    <value>Common functions that can be used to write the rotation.</value>
  </data>
  <data name="UpdateToolTip" xml:space="preserve">
    <value>Check updates</value>
  </data>
  <data name="ReloadToolTip" xml:space="preserve">
    <value>Reload profiles</value>
  </data>
  <data name="CloseToolTip" xml:space="preserve">
    <value>Close window</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Check update</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="HelpToolTip" xml:space="preserve">
    <value>Show help</value>
  </data>
  <data name="HotKey" xml:space="preserve">
    <value>Hot key</value>
  </data>
  <data name="WowClass_Warrior" xml:space="preserve">
    <value>Warrior</value>
  </data>
  <data name="WowClass_Paladin" xml:space="preserve">
    <value>Paladin</value>
  </data>
  <data name="WowClass_Hunter" xml:space="preserve">
    <value>Hunter</value>
  </data>
  <data name="WowClass_Rogue" xml:space="preserve">
    <value>Rogue</value>
  </data>
  <data name="WowClass_Priest" xml:space="preserve">
    <value>Priest</value>
  </data>
  <data name="WowClass_DeathKnight" xml:space="preserve">
    <value>Death Knight</value>
  </data>
  <data name="WowClass_Shaman" xml:space="preserve">
    <value>Shaman</value>
  </data>
  <data name="WowClass_Mage" xml:space="preserve">
    <value>Mage</value>
  </data>
  <data name="WowClass_Warlock" xml:space="preserve">
    <value>Warlock</value>
  </data>
  <data name="WowClass_Monk" xml:space="preserve">
    <value>Monk</value>
  </data>
  <data name="WowClass_Druid" xml:space="preserve">
    <value>Druid</value>
  </data>
  <data name="IsSpellKnownCheck" xml:space="preserve">
    <value>Is spell known</value>
  </data>
  <data name="IsSpellKnownCheckToolTip" xml:space="preserve">
    <value>Check whether the player (or pet) knows a spell.</value>
  </data>
  <data name="SpellIdToolTip" xml:space="preserve">
    <value>Spell Id</value>
  </data>
  <data name="NameToolTip" xml:space="preserve">
    <value>Ability name</value>
  </data>
  <data name="IsMovingCheck" xml:space="preserve">
    <value>Moving check</value>
  </data>
  <data name="IsMovingCheckToolTip" xml:space="preserve">
    <value>If true, then there is a check if the character is moving before you cast.</value>
  </data>
  <data name="MovingStates_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="MovingStates_Moving" xml:space="preserve">
    <value>Moving</value>
  </data>
  <data name="MovingStates_NotMoving" xml:space="preserve">
    <value>Not moving</value>
  </data>
  <data name="MovingStates_None_ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MovingStates_Moving_ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MovingStates_NotMoving_ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="UpdAdress" xml:space="preserve">
    <value>Update adress</value>
  </data>
  <data name="ProfileInfo" xml:space="preserve">
    <value>Profile info</value>
  </data>
  <data name="CodeExequteTitle" xml:space="preserve">
    <value>Lua tester</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>Process: </value>
  </data>
  <data name="CommandRun" xml:space="preserve">
    <value>Run (F5)</value>
  </data>
  <data name="NotSelectedProcessMessage" xml:space="preserve">
    <value>Not selected prosess</value>
  </data>
  <data name="CurentProfile" xml:space="preserve">
    <value>Curent profile: </value>
  </data>
  <data name="AbilityCount" xml:space="preserve">
    <value>Ability count: </value>
  </data>
  <data name="RotationCount" xml:space="preserve">
    <value>Rotation count: </value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Rotation_Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Rotation_Code_ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Rotation_TickDelay" xml:space="preserve">
    <value>Tick delay (ms): </value>
  </data>
  <data name="Rotation_TickDelayToolTip" xml:space="preserve">
    <value>Tick delay (ms)</value>
  </data>
  <data name="Ability" xml:space="preserve">
    <value>Ability</value>
  </data>
  <data name="Ability_Code" xml:space="preserve">
    <value>Ability: Code</value>
  </data>
  <data name="Ability_Filter" xml:space="preserve">
    <value>Filter: </value>
  </data>
  <data name="Rotation_Name" xml:space="preserve">
    <value>Name: </value>
  </data>
  <data name="AbilityDelQuestion" xml:space="preserve">
    <value>Do you really want to delete the current ability?</value>
  </data>
  <data name="RotationDelQuestion" xml:space="preserve">
    <value>Do you really want to delete the current rotation?</value>
  </data>
</root>